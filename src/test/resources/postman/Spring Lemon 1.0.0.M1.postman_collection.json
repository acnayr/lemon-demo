{
	"info": {
		"name": "Spring Lemon 1.0.0.M1",
		"_postman_id": "298e67ce-5d21-7d86-8230-b784c97f2762",
		"description": "This is the API documentation of the _Spring Lemon Demo Application_, which shows how to easily develop a production grade REST Service with a full-featured user module by using the [Spring Lemon](https://github.com/naturalprogrammer/spring-lemon) open source library.\n\nRefer https://github.com/naturalprogrammer/spring-lemon for more details.\n\n[TODO: Add general details - validation rules ..]",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Common Operations",
			"description": "",
			"item": [
				{
					"name": "Ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b798ef33-feaf-44e7-8810-e4e8dd9ef8be",
								"type": "text/javascript",
								"exec": [
									"tests[\"Ping status code is 200\"] = responseCode.code === 204;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/ping",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"ping"
							]
						},
						"description": "Pings the server. Server returns a `204` response."
					},
					"response": [
						{
							"id": "0345ba24-ce68-4f80-b085-8624fd577d1b",
							"name": "Ping",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/ping",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"ping"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Date",
									"value": "Fri, 02 Mar 2018 16:47:53 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c85e3c9-f313-4dad-8474-1a8de1c2bf6d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Login status code is 200\"] = responseCode.code === 200;",
									"",
									"if (responseCode.code === 200) {",
									"    postman.setEnvironmentVariable(\"userAuthHeader\", postman.getResponseHeader(\"Lemon-Authorization\"));",
									"    postman.setEnvironmentVariable(\"userId\", JSON.parse(responseBody).id);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "admin@example.com",
									"type": "text",
									"description": "Email"
								},
								{
									"key": "password",
									"value": "admin!",
									"type": "text",
									"description": "Password"
								},
								{
									"key": "expirationMillis",
									"value": "864000000",
									"description": "Optional - defaults to 864000000 (10 days)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{lemonDemoUrl}}/login",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Given a user's credentials, this endpoint returns a `200` response with the user details and a `Lemon-Authorization` response header. In case of bad credentils, it responds with a `401`.\n\nThe `Lemon-Authorization` response header looks as below:\n\n> Bearer eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..x_LjxSnecBiaRVJH46pjxA.HPLsSqScB9dF7Ax568sPUiPfi9Q6tY5jiI0Xco3kuxDjCaRlEemQ6HtJo-WgvrEsTWWx3_v_c6C5a_STjZfD4cPdjlq8_6Tgbq5-aCDLidLF7Obz5O3O9VTEimu77mva.bGp0g-WCbHKXu2Y0l_ToSw\n\nIt can be used as the `Authorization` request header in subsequent calls to authenticate the user in a stateless manner."
					},
					"response": [
						{
							"id": "20978cdd-64fe-45e0-a99d-400ba32c4f6a",
							"name": "Login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "admin@example.com",
											"type": "text",
											"description": "Email"
										},
										{
											"key": "password",
											"value": "admin!",
											"type": "text",
											"description": "Password"
										},
										{
											"key": "expirationMillis",
											"value": "864000000",
											"description": "By defult 864000000 (10 days)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/login",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Length",
									"value": "169",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 02 Mar 2018 13:43:18 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Lemon-Authorization",
									"value": "Bearer eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..x_LjxSnecBiaRVJH46pjxA.HPLsSqScB9dF7Ax568sPUiPfi9Q6tY5jiI0Xco3kuxDjCaRlEemQ6HtJo-WgvrEsTWWx3_v_c6C5a_STjZfD4cPdjlq8_6Tgbq5-aCDLidLF7Obz5O3O9VTEimu77mva.bGp0g-WCbHKXu2Y0l_ToSw",
									"name": "Lemon-Authorization",
									"description": "Custom header"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"id\":1,\"username\":\"admin@example.com\",\"roles\":[\"ADMIN\"],\"tag\":{\"name\":\"Administrator\"},\"unverified\":false,\"blocked\":false,\"admin\":true,\"goodUser\":true,\"goodAdmin\":true}"
						},
						{
							"id": "abe4240b-6f81-40a7-b4fc-45d735dd066d",
							"name": "Login with wrong credentials",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "admin@example.com",
											"type": "text",
											"description": "Email"
										},
										{
											"key": "password",
											"value": "wrong-password",
											"type": "text",
											"description": "Password"
										},
										{
											"key": "expirationMillis",
											"value": "864000000",
											"description": "By defult 864000000 (10 days)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/login",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 02 Mar 2018 16:01:41 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"timestamp\":\"2018-03-02T16:01:41.531+0000\",\"status\":401,\"error\":\"Unauthorized\",\"message\":\"Unauthorized\",\"path\":\"/login\"}"
						}
					]
				},
				{
					"name": "Get context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b60225a7-88f8-4bbb-9cf3-eabd0fd6eaa1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Get context status code is 200\"] = responseCode.code === 200;",
									"",
									"// Set userId",
									"var user = JSON.parse(responseBody).user;",
									"if (user)",
									"    postman.setEnvironmentVariable(\"userId\", user.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{userAuthHeader}}",
								"description": "Optional. If given, the user data is returned."
							}
						],
						"body": {},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/context",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"context"
							]
						},
						"description": "Returns a `200` response with useful application properties and current user data.\n\nCall this at start-up of a client application to fetch useful application properties (e.g. _reCaptchaSiteKey_), and current-user data if you have a authentication token in _local storage_.\n\nThe _context.shared_ response field would have all the _lemon.shared.\\*properties_ that are defined in _application\\*.yml_. So, if your applicstion needs to pass some properties to the client, just define those under _lemon.shared._ in _appliction\\*.properties_."
					},
					"response": [
						{
							"id": "126adbbb-8faa-41d5-9668-43934491eff0",
							"name": "Get context with Authorization header",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{userAuthHeader}}",
										"description": "Optional. The user data is returned if given."
									}
								],
								"body": {},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/context",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"context"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 01:19:42 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"context\":{\"reCaptchaSiteKey\":\"  \",\"shared\":{\"fooBar\":\"123...\"}},\"user\":{\"id\":1,\"username\":\"admin@example.com\",\"roles\":[\"ADMIN\"],\"tag\":{\"name\":\"Administrator\"},\"unverified\":false,\"blocked\":false,\"admin\":true,\"goodUser\":true,\"goodAdmin\":true}}"
						},
						{
							"id": "96a79fa6-c205-4266-878b-a1897b2c5494",
							"name": "Get context using a wrong Authorization token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer a-wrong-token",
										"description": "A wrong token"
									}
								],
								"body": {},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/context",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"context"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 06:21:34 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"timestamp\":\"2018-03-03T06:21:34.748+0000\",\"status\":401,\"error\":\"Unauthorized\",\"message\":\"Authentication Failed: Invalid JWT serialization: Missing dot delimiter(s)\",\"path\":\"/api/core/context\"}"
						},
						{
							"id": "152744e2-27f5-469e-b2c4-648d3ed8298f",
							"name": "Get context without Authorization header",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/context",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"context"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 01:24:33 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"context\":{\"reCaptchaSiteKey\":\"  \",\"shared\":{\"fooBar\":\"123...\"}}}"
						}
					]
				}
			]
		},
		{
			"name": "User Module",
			"description": "",
			"item": [
				{
					"name": "Sign up",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0f0d881-ff0d-414c-8551-c4845f45a9be",
								"type": "text/javascript",
								"exec": [
									"tests[\"Signup\"] = responseCode.code === 201;",
									"",
									"// Set userId and email",
									"if (responseCode.code === 201) {",
									"    postman.setEnvironmentVariable(\"userAuthHeader\", postman.getResponseHeader(\"Lemon-Authorization\"));",
									"    postman.setEnvironmentVariable(\"userId\", JSON.parse(responseBody).id);",
									"    postman.setEnvironmentVariable(\"userEmail\", JSON.parse(responseBody).username);",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c198fe16-97ff-4b16-acda-94ad9475c121",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"registeredEmail\", \"skpatel20+lemon\" + Math.floor(Math.random() * 10000000) + \"@example.com\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{registeredEmail}}\",\r\n    \"password\": \"user123\",\r\n    \"name\": \"Sample User\",\r\n    \"captchaResponse\": null\r\n}"
						},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/users",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"users"
							]
						},
						"description": "Signs a new user up, and returns a `201` response with user data and an Authorization token in the _Lemon-Authorization_ response parameter. A verification mail as well is sent to his email. In case of validation errors, returns a 422 response with error data.\n\nProvide the `captchaResponse` field if you want captcha validation. Sign up let’s you use [reCAPTCHA](https://developers.google.com/recaptcha/) from Google. If you use it, `captchaResponse` field should hold the captcha response. To use it,\n\n1. At the server side, set a couple of properties, as described in the Spring Lemon getting started guide.\n1. At the client side, for an AngularJS client, [angular-recaptcha](https://github.com/VividCortex/angular-recaptcha) works great. Remember to send the captcha response in the captchaResponse field.\n\nIf you don’t want Captcha, e.g. in a demo app, just don’t provide the captcha related properties in application.yml."
					},
					"response": [
						{
							"id": "b9234f5a-2df6-48ed-9635-6b3db9f8dfc8",
							"name": "Sign up",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{registeredEmail}}\",\r\n    \"password\": \"user123\",\r\n    \"name\": \"Sample User\",\r\n    \"captchaResponse\": null\r\n}"
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 06:50:56 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Lemon-Authorization",
									"value": "Bearer eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..TSLs6gmlI5PkGrAuu7dwiA.1jOzgzLUGzR5h_blEA2suPJeXOCG2tjekE2SYke-YUYdc8YGhlge4UGG3Lq0w-1LAITXVOgopPIaY2mYbw5-eY4PaszlUDmwkEjg3ehxSnI8iUhb4SaBCn82DRskiyBG66_iR_BZmj8V-ne5c_Poww.iLYs34fnij_z-GZjMFuMwg",
									"name": "Lemon-Authorization",
									"description": "Custom header"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"id\":2,\"username\":\"skpatel20+lemon1842637@example.com\",\"roles\":[\"UNVERIFIED\"],\"tag\":{\"name\":\"Sample User\"},\"unverified\":true,\"blocked\":false,\"admin\":false,\"goodUser\":false,\"goodAdmin\":false}"
						},
						{
							"id": "9096670d-ff42-412c-a29f-5abd854e5650",
							"name": "Sign up with invalid data",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"abc\",\r\n    \"password\": \"user1\",\r\n    \"name\": null,\r\n    \"captchaResponse\": null\r\n}"
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 06:53:01 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"exception\":\"ConstraintViolationException\",\"error\":\"Unprocessable Entity\",\"message\":\"Validation Error\",\"status\":422,\"errors\":[{\"field\":\"user.email\",\"code\":\"{com.naturalprogrammer.spring.invalid.email}\",\"message\":\"Not a well formed email address\"},{\"field\":\"user.password\",\"code\":\"{com.naturalprogrammer.spring.invalid.password.size}\",\"message\":\"Password must be between 6 and 50 characters\"},{\"field\":\"user.name\",\"code\":\"{blank.name}\",\"message\":\"Name required\"},{\"field\":\"user.email\",\"code\":\"{com.naturalprogrammer.spring.invalid.email.size}\",\"message\":\"Email must be between 4 and 250 characters\"}]}"
						}
					]
				},
				{
					"name": "Resend verification mail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "583ab92b-16ab-48f3-a068-1269fb7384d7",
								"type": "text/javascript",
								"exec": [
									"tests[\"Resend verification mail\"] = responseCode.code === 204;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{userAuthHeader}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}/resend-verification-mail",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"users",
								"{{userId}}",
								"resend-verification-mail"
							]
						},
						"description": "A verification mail is sent to users upon sign up. But, sometimes they may miss it. So, when a unverified user signs in, you may like to show him a button or something to resend the verification mail. When the user clicks on that, thi endpoint is to be called to resend a verification mail.\n\nApart from self, an ADMIN is also permitted to resend verification mail to any unverified user.\n\nReturns `204` on success."
					},
					"response": [
						{
							"id": "27ac9ba0-ebf2-4e61-acf1-9c9522b0ed8d",
							"name": "Resend verification mail",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{userAuthHeader}}",
										"disabled": false
									}
								],
								"body": {},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}/resend-verification-mail",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users",
										"{{userId}}",
										"resend-verification-mail"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 07:16:16 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Verify User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e25ecc3-b072-4125-8d27-c0a9c2d48c73",
								"type": "text/javascript",
								"exec": [
									"tests[\"Verify user\"] = responseCode.code === 200;",
									"",
									"if (responseCode.code === 200)",
									"    postman.setEnvironmentVariable(\"userAuthHeader\", postman.getResponseHeader(\"Lemon-Authorization\"));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "code",
									"value": "eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..sGRLLFqDn1pDExwmRNzkEg.cHaoiAMjWvK5VI5xrijuBnWXe2fAk6gJw_If07FqDr3AX2CXLtRGucD1mNhddfqiAIOt4YaUTM_cKMingPv_KEEEyh9c5BfpDXBrBbe0sVyuscUSyDlAggHK50tUCqieysrEe1d6QiO10_MJFU7AY2-lGxRljRuMIwPXFOa7eXY.AS0TYMnEBn1Ee42gwfh84A",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}/verification",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"users",
								"{{userId}}",
								"verification"
							]
						},
						"description": "After a user signs up, he receives a verification mail. The mail contains a link with the userId and an embedded verification code. Clicking on that takes the user to the front-end application, from where this endpoint should be called.\n\nReturns a `200` response upon success, along with updated user data and a new `Lemon-Authorization` token. In subsequent requests, this new token should be used. Old tokens would no more work."
					},
					"response": [
						{
							"id": "dd9683f0-d77c-4ae0-b813-341fbb61d415",
							"name": "Verify User",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "code",
											"value": "eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..sGRLLFqDn1pDExwmRNzkEg.cHaoiAMjWvK5VI5xrijuBnWXe2fAk6gJw_If07FqDr3AX2CXLtRGucD1mNhddfqiAIOt4YaUTM_cKMingPv_KEEEyh9c5BfpDXBrBbe0sVyuscUSyDlAggHK50tUCqieysrEe1d6QiO10_MJFU7AY2-lGxRljRuMIwPXFOa7eXY.AS0TYMnEBn1Ee42gwfh84A",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}/verification",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users",
										"{{userId}}",
										"verification"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 07:25:53 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Lemon-Authorization",
									"value": "Bearer eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..hUlUm7W15yR7sQLLvVsTxw.VudpH4qxSnDVNE2sYcZDKsZH3fniHxGg5E7pfuBYQLUHiRdjMlaHjlqfSOGTq9BaWcQVFkAwse_6rIH7ypELaWa6DU9BqlSWuY0VO7Oc4lMBNZm5BzwHayky6FpObEjIVejyJBpNDXG5oWFnXcYUqQ.4Uo-8XMjJl--UcESad_04A",
									"name": "Lemon-Authorization",
									"description": "Custom header"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"id\":2,\"username\":\"skpatel20+lemon1842637@example.com\",\"roles\":[],\"tag\":{\"name\":\"Sample User\"},\"unverified\":false,\"blocked\":false,\"admin\":false,\"goodUser\":true,\"goodAdmin\":false}"
						}
					]
				},
				{
					"name": "Forgot password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f4ee3aa-c0c0-4d98-a393-6bae2d404537",
								"type": "text/javascript",
								"exec": [
									"tests[\"Forgot password\"] = responseCode.code === 204;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "{{userEmail}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/forgot-password",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"forgot-password"
							]
						},
						"description": "Calling this endpoint sends a link to the given email, with a code embedded. That link can be used by the user to reset his password (See next endpoint).\n\nReturns a `204` response."
					},
					"response": [
						{
							"id": "9049e518-7274-4c13-bf61-9dab6047d636",
							"name": "Forgot password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{userEmail}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/forgot-password",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"forgot-password"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 07:38:59 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Reset password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b0b2a7f-5fb1-4efe-b765-b6c0576f691a",
								"type": "text/javascript",
								"exec": [
									"tests[\"Reset password\"] = responseCode.code === 200;",
									"",
									"if (responseCode.code === 200)",
									"    postman.setEnvironmentVariable(\"userAuthHeader\", postman.getResponseHeader(\"Lemon-Authorization\"));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "newPassword",
									"value": "a-new-password",
									"type": "text"
								},
								{
									"key": "code",
									"value": "eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..09VdWWEK81dh59o4eQ0L-g.gdFc8B52KvOHb7e8OY8Yk540lbGsVE7-W8EMha-ZEdLKOV2WFs7xGMVS-r_e7SfhL00A1-H8reZlRdYEYO8KyC4dosdMhOAFkd4urZjoRpy7Lgnx8K6_-op-TU7iXY9TcBXDwT_T0F7wfwV15m2c_A.wp5HyHxbYQGnAWI9RM7QgA",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/reset-password",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"reset-password"
							]
						},
						"description": "In the previous endpoint, we saw how a user gets a link with a code embedded for resetting his password. Clicking on that link should take him to a front-end form, where he should enter a new password. Upon submitting that form, this endpoint should be called.\n\nReturns a `200` response with the user details and a new Authorization token in the `Lemon-Authorization` header. The new token shoukd be used for authorization henceforward. Old tokens won't work anymore."
					},
					"response": [
						{
							"id": "586ec098-1624-4397-afe7-6c184e0ef713",
							"name": "Reset password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "newPassword",
											"value": "a-new-password",
											"type": "text"
										},
										{
											"key": "code",
											"value": "eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..09VdWWEK81dh59o4eQ0L-g.gdFc8B52KvOHb7e8OY8Yk540lbGsVE7-W8EMha-ZEdLKOV2WFs7xGMVS-r_e7SfhL00A1-H8reZlRdYEYO8KyC4dosdMhOAFkd4urZjoRpy7Lgnx8K6_-op-TU7iXY9TcBXDwT_T0F7wfwV15m2c_A.wp5HyHxbYQGnAWI9RM7QgA",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/reset-password",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"reset-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 07:48:02 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Lemon-Authorization",
									"value": "Bearer eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..v0d_lc9aXcQQyzlVwL3FWA.tPwWju0fvwo9iF3s0E_QCmP537WqMlHigXsDmmUw6EPhuzrRNylMxBAdSW9bweTS81-7q6yMrk5ZLDBjhFITJOZgTXaBA3ny9T86NhezH-vKIgkEIv3HStlk9f6CSMpuL25UrBCo11gD9ocv3unrcQ.dcWWrGIYpCv4OtvyRfpO_g",
									"name": "Lemon-Authorization",
									"description": "Custom header"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"id\":2,\"username\":\"skpatel20+lemon1842637@example.com\",\"roles\":[],\"tag\":{\"name\":\"Sample User\"},\"unverified\":false,\"blocked\":false,\"admin\":false,\"goodUser\":true,\"goodAdmin\":false}"
						}
					]
				},
				{
					"name": "Fetch user by email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47534558-c7e7-4c91-aa8e-14a352176f21",
								"type": "text/javascript",
								"exec": [
									"tests[\"Fetch user by email\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{userAuthHeader}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "{{userEmail}}",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/users/fetch-by-email",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"users",
								"fetch-by-email"
							]
						},
						"description": "E.g. a good ADMIN fetching a user, maybe for changing its roles. The confidential fields would not be returned in case the current user is neither self nor an ADMIN.\n\nReturns a `200` response."
					},
					"response": [
						{
							"id": "624dc28b-0ab3-45e0-b210-9d91a09fbde9",
							"name": "Fetch user by email - Self or Admin",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{userAuthHeader}}",
										"disabled": false
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{userEmail}}",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users/fetch-by-email",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users",
										"fetch-by-email"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 07:52:03 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"id\":2,\"version\":2,\"email\":\"skpatel20+lemon1842637@example.com\",\"roles\":[],\"name\":\"Sample User\",\"new\":false}"
						},
						{
							"id": "f1a31ecd-7230-4e96-a694-8ff7f6448246",
							"name": "Fetch user by email - Others",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{userEmail}}",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users/fetch-by-email",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users",
										"fetch-by-email"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 07:52:44 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"id\":2,\"version\":2,\"roles\":[],\"name\":\"Sample User\",\"new\":false}"
						}
					]
				},
				{
					"name": "Fetch user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97c867ee-3c43-42d0-a289-82a62ac3530d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Fetch user by ID\"] = responseCode.code === 200;",
									"",
									"if (responseCode.code === 200) {",
									"    var currentUser = JSON.parse(responseBody);",
									"    console.log(currentUser.version);",
									"    postman.setEnvironmentVariable(\"userVersion\", currentUser.version);  ",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{userAuthHeader}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"users",
								"{{userId}}"
							]
						},
						"description": "Used for viewing the profile of a user. Returns with a `200` response. Confidential fields aren't returned in case the user is neither self nor an Admin."
					},
					"response": [
						{
							"id": "ee014ce0-70ab-4a04-bc96-5663e8fd8e0c",
							"name": "Fetch user by ID - Self or Admin",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{userAuthHeader}}",
										"disabled": false
									}
								],
								"body": {},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users",
										"{{userId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 07:59:01 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"id\":2,\"version\":2,\"email\":\"skpatel20+lemon1842637@example.com\",\"roles\":[],\"name\":\"Sample User\",\"new\":false}"
						},
						{
							"id": "b7ae7dba-f5ca-4930-a147-7083a8427a68",
							"name": "Fetch user by ID - Others",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users",
										"{{userId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 07:59:28 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"id\":2,\"version\":2,\"roles\":[],\"name\":\"Sample User\",\"new\":false}"
						}
					]
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cedd9df0-7aa0-47b8-aef5-17927754434c",
								"type": "text/javascript",
								"exec": [
									"tests[\"Update user\"] = responseCode.code === 200;",
									"",
									"if (responseCode.code === 200)",
									"    postman.setEnvironmentVariable(\"userAuthHeader\", postman.getResponseHeader(\"Lemon-Authorization\"));",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{userAuthHeader}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  { \"op\": \"replace\", \"path\": \"/name\", \"value\": \"Edited name\" },\r\n  { \"op\": \"replace\", \"path\": \"/email\", \"value\": \"should.not@get.replaced\" },\r\n  { \"op\": \"replace\", \"path\": \"/roles\", \"value\": [\"ADMIN\"] },\r\n  { \"op\": \"replace\", \"path\": \"/version\", \"value\": {{userVersion}} }  \r\n]\r\n"
						},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"users",
								"{{userId}}"
							]
						},
						"description": "Updates the name and roles of a user. If you have added more updatable fields to User, they can also be updated using this request. Please note that roles can be updated not by self, but by another Admin only.\n\nReturns `200` upon success. A new Authorization token is returned in a `Lemon-Authorization` header, which should be used in subsequent requests. If roles are updated, all old tokens would be invalid.\n\n#### What is version\n\nUser, like all _VersionedEntity_, has a version column, which is incremented on each update.\n\nWhile updating, it is first checked that the given version is equal to the version in the database record. Otherwise, it is assumed that someone else has updated the record concurrently, and the update fails. To use it, you will typically\n\n1. Along with the data to be updated, fetch the version column as well (It'll be there in the response of _Fetch user by ID_).\n1. When the user submits the updated data, send the version back along with the updated data.\n\nPrecisely, we are talking about optimistic locking. Refer [documentation and resources](https://github.com/naturalprogrammer/spring-lemon#documentation-and-resources) for more details."
					},
					"response": [
						{
							"id": "99a1a329-2743-499a-b758-744b15f74b84",
							"name": "Update user",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									},
									{
										"key": "Authorization",
										"value": "{{userAuthHeader}}",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  { \"op\": \"replace\", \"path\": \"/name\", \"value\": \"Edited name\" },\r\n  { \"op\": \"replace\", \"path\": \"/email\", \"value\": \"should.not@get.replaced\" },\r\n  { \"op\": \"replace\", \"path\": \"/roles\", \"value\": [\"ADMIN\"] },\r\n  { \"op\": \"replace\", \"path\": \"/version\", \"value\": {{userVersion}} }  \r\n]\r\n"
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users",
										"{{userId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 08:08:37 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Lemon-Authorization",
									"value": "Bearer eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..RekyTCsuwsbeJyN2k23fdw.7hOFGSEKkq_sakvl8JHaBzfkiBGR_9jGq6isYRR1LD8OpnO4mhLdQpRSS8RlAtwsfYc4Px3bf_BiMPNicvou-TEjFuS8XECGKc4uynu6s8LvMAg_2pXDAlREeIJmWmLPtaZYltaj4Is-a8ahdvpoDA.i0GslEnIj0s57A6gazwUDQ",
									"name": "Lemon-Authorization",
									"description": "Custom header"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"id\":2,\"username\":\"skpatel20+lemon1842637@example.com\",\"roles\":[],\"tag\":{\"name\":\"Edited name\"},\"unverified\":false,\"blocked\":false,\"admin\":false,\"goodUser\":true,\"goodAdmin\":false}"
						}
					]
				},
				{
					"name": "Change password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7625fdd-ad65-4949-8da4-d8d943f7ae30",
								"type": "text/javascript",
								"exec": [
									"tests[\"Change password\"] = responseCode.code === 204;",
									"",
									"if (responseCode.code === 204)",
									"    postman.setEnvironmentVariable(\"userAuthHeader\", postman.getResponseHeader(\"Lemon-Authorization\"));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{userAuthHeader}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"oldPassword\" : \"a-new-password\",\r\n    \"password\" : \"a-new-password-2\",\r\n    \"retypePassword\" : \"a-new-password-2\"\r\n}"
						},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}/password",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"users",
								"{{userId}}",
								"password"
							]
						},
						"description": "Changes the password of a user. Returns `204`with a new Authorization token in the `Lemon-Authorization` header. The new token shoukd be used for authorization henceforward. Old tokens won't work anymore."
					},
					"response": [
						{
							"id": "d27b69a4-a120-403f-8e83-b0e84db9192e",
							"name": "Change password",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									},
									{
										"key": "Authorization",
										"value": "{{userAuthHeader}}",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"oldPassword\" : \"a-new-password\",\r\n    \"password\" : \"a-new-password-2\",\r\n    \"retypePassword\" : \"a-new-password-2\"\r\n}"
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}/password",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users",
										"{{userId}}",
										"password"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 08:21:23 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Lemon-Authorization",
									"value": "Bearer eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..ZxDIAjfAZPFqpuMX9iLkzw.yT39za4iL-rKc9cJgCJnftIqdBnX6_djv2FKxY8MmDBnC2GWWlFkfcVEXat1ulpItfDi6QlnEXQ3TySf5K5mxYZBMySIvyeoyc6uj0SNQLLcqGJ_QzD3MxWIbrH7MoT70Eb17BDQran6hR88FHb8Lw.idY7jd0K40ajmOkoCpM7fg",
									"name": "Lemon-Authorization",
									"description": "Custom header"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Requesting for changing email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0f225515-121a-4daa-b8ed-d0b2913bc840",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"newEmail\", \"skpatel20+changedlemon\" + Math.floor(Math.random() * 10000000) + \"@example.com\");"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5b9c0ba5-6be5-4ab9-9b4b-8cd7e63f927b",
								"type": "text/javascript",
								"exec": [
									"tests[\"Request email change\"] = responseCode.code === 204;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{userAuthHeader}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\" : \"a-new-password-2\",\r\n    \"newEmail\": \"{{newEmail}}\"\r\n}"
						},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}/email-change-request",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"users",
								"{{userId}}",
								"email-change-request"
							]
						},
						"description": "A user (or an Admin on his behalf) can use this endpoint for changing his email id.\n\nOn calling this endpoint, an email with a link is sent to the new email id, which contains a code. Clicking on the link brings the user back to the front-end, where first he should log in if he is not already. Then, he would click a button for sending the final email change request for doing the final change (see the next endpoint).\n\nReturns `204'."
					},
					"response": [
						{
							"id": "df442902-7ce9-462c-82f5-0be8bf9a2be5",
							"name": "Requesting for changing email",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									},
									{
										"key": "Authorization",
										"value": "{{userAuthHeader}}",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\" : \"a-new-password-2\",\r\n    \"newEmail\": \"{{newEmail}}\"\r\n}"
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}/email-change-request",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users",
										"{{userId}}",
										"email-change-request"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 08:27:58 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Change email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45c2bfb6-7b91-4160-815e-fd2a1eac1792",
								"type": "text/javascript",
								"exec": [
									"tests[\"Change email\"] = responseCode.code === 200;",
									"",
									"if (responseCode.code === 200) {",
									"    ",
									"    postman.setEnvironmentVariable(\"userAuthHeader\", postman.getResponseHeader(\"Lemon-Authorization\"));",
									"    ",
									"    var currentUser = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"userEmail\", currentUser.username);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{userAuthHeader}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "code",
									"value": "eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..Eiv9Jk5EXb9YwOeRPEIydw.EDMQrE_gIF7CLV8apdSbB6HxIyNzegYcJr0YhdwePMPnLv15wLYgoqQf29fz81YOnTCzHvE55Lt03cQ5gkD3DRG_JPf8ygrLjDuJbt9D_RxSjlXdFyOzw3efwKPSZWOC2MqOJdyUG6xjndJL64eEOFfmk_3g2I6u2XMaGU1CqczdPqMP0nTVAWsFJq8ZJvzJ.3Lz2dr_KOTzk8jZG4nPrNw",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}/email",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"users",
								"{{userId}}",
								"email"
							]
						},
						"description": "In the previous endpoint, we saw how a user gets a link with a code for changing his email. Clicking on that should brings him back to the front-end, where first he should login if he is not already. He would then click a button for proceeding with the change, which should call this endpoint.\n\nReturns a `200` response with the user details and a new Authorization token in the `Lemon-Authorization` header. The new token should be used for authorization henceforward. Old tokens won't work anymore."
					},
					"response": [
						{
							"id": "084a782f-f045-4583-9baf-110027db9fa4",
							"name": "Change email",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									},
									{
										"key": "Authorization",
										"value": "{{userAuthHeader}}",
										"disabled": false
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "code",
											"value": "eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..Eiv9Jk5EXb9YwOeRPEIydw.EDMQrE_gIF7CLV8apdSbB6HxIyNzegYcJr0YhdwePMPnLv15wLYgoqQf29fz81YOnTCzHvE55Lt03cQ5gkD3DRG_JPf8ygrLjDuJbt9D_RxSjlXdFyOzw3efwKPSZWOC2MqOJdyUG6xjndJL64eEOFfmk_3g2I6u2XMaGU1CqczdPqMP0nTVAWsFJq8ZJvzJ.3Lz2dr_KOTzk8jZG4nPrNw",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/users/{{userId}}/email",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"users",
										"{{userId}}",
										"email"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 08:37:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Lemon-Authorization",
									"value": "Bearer eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..IVJLPiMFQflTOAdwDCmXYQ.EkkxujSreZ5x3Az7zciDuReAmKbezGBG3Xn4ilUC53pymbLglYkIHn1vDsiQh9578gjGh5q1RQWtTl8yDuPk1PX82cK4D83KLWwWtQDKaz2JLGEY6KV8w82ylWbnKB86MzqvS4r7pzYVnibaKuIAkQ.yOYxUHdokWAEhdRlstzONw",
									"name": "Lemon-Authorization",
									"description": "Custom header"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"id\":2,\"username\":\"skpatel20+changedlemon6524790@example.com\",\"roles\":[],\"tag\":{\"name\":\"Edited name\"},\"unverified\":false,\"blocked\":false,\"admin\":false,\"goodUser\":true,\"goodAdmin\":false}"
						}
					]
				},
				{
					"name": "Fetch new token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "465c68b2-efac-413e-8e7e-2011f513666f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Fetch new token\"] = responseCode.code === 204;",
									"",
									"if (responseCode.code === 204)",
									"    postman.setEnvironmentVariable(\"userAuthHeader\", postman.getResponseHeader(\"Lemon-Authorization\"));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{userAuthHeader}}"
							},
							{
								"key": "username",
								"value": "{{userEmail}}",
								"description": "Optional. Can be used by Admins for fetcing token of another user"
							},
							{
								"key": "expirationMillis",
								"value": "864000000",
								"description": "Optional - defaults to 864000000 (10 days)"
							}
						],
						"body": {},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/fetch-new-token",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"fetch-new-token"
							]
						},
						"description": "Fetches a new Authorization token in the `Lemon-Authorization` response header. Can be used for renewing tokens, for session sliding. Also, an admin can fetch a new token for another user.\n\nReturns `204`."
					},
					"response": [
						{
							"id": "0ce03b91-8dd9-455a-8d4d-98e9b9ff7209",
							"name": "Fetch new token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									},
									{
										"key": "Authorization",
										"value": "{{userAuthHeader}}",
										"disabled": false
									},
									{
										"key": "username",
										"value": "{{userEmail}}",
										"description": "Optional. Can be used by Admins for fetcing token of another user",
										"disabled": false
									},
									{
										"key": "expirationMillis",
										"value": "864000000",
										"description": "Optional - defaults to 864000000 (10 days)",
										"disabled": false
									}
								],
								"body": {},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/fetch-new-token",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"fetch-new-token"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 08:46:18 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Lemon-Authorization",
									"value": "Bearer eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..SjO5CE3QN8DmB_6B2bactg.dpjcVOz4WpvQg372G8-hK_VGKg5-PGJa9LQNNnEqZg9GolbCx08VeuDkt2UQkyfagB9RakENZIkaPsUNR5yL3UxfdTziLziQ_kpXCYNeC1I6fxcE2CQtMq1tRE_1sO4kK02TjEywAEU0CxxJy2d0mQ.S6YD2jR9dTAHgCiyURZ8IQ",
									"name": "Lemon-Authorization",
									"description": "Custom header"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Login with nonce",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12f8fc30-3b16-4f61-8c6f-9b2c2b0aa6d3",
								"type": "text/javascript",
								"exec": [
									"tests[\"Login with nonce\"] = responseCode.code === 200;",
									"",
									"if (postman.getResponseHeader(\"Lemon-Authorization\"))",
									"    postman.setEnvironmentVariable(\"userAuthHeader\", postman.getResponseHeader(\"Lemon-Authorization\"));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": {{userId}},\n\t\"nonce\": \"a-unique-secret\",\n\t\"expirationMillis\": null\n}"
						},
						"url": {
							"raw": "{{lemonDemoUrl}}/api/core/login-with-nonce",
							"host": [
								"{{lemonDemoUrl}}"
							],
							"path": [
								"api",
								"core",
								"login-with-nonce"
							]
						},
						"description": "Used for fetching a new Authorization token after a user does social login.\n\nWhen the user finishes social login, he is redirected to the front end url https://front-end.example.com/users/{userId}/{nonce}. The front end should then call this endpoint to receive a Authorization token in the `Lemon-Authorization` header. Note that the nonce can be used only once.\n\n`expirationMillis` is an optional field. If not provided, defaults to 864000000 (10 days)."
					},
					"response": [
						{
							"id": "0b26ebb5-41cf-4073-b58a-2f4d1c1d5635",
							"name": "Login with nonce",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userId\": {{userId}},\n\t\"nonce\": \"a-unique-secret\",\n\t\"expirationMillis\": null\n}"
								},
								"url": {
									"raw": "{{lemonDemoUrl}}/api/core/login-with-nonce",
									"host": [
										"{{lemonDemoUrl}}"
									],
									"path": [
										"api",
										"core",
										"login-with-nonce"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept,Accept-Encoding,Accept-Language,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Host,Origin,Pragma,Referer,User-Agent,x-requested-with,X-XSRF-TOKEN,Lemon-Authorization",
									"name": "Access-Control-Allow-Headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,PATCH",
									"name": "Access-Control-Allow-Methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "http://localhost:9000",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Cache-Control,Connection,Content-Type,Date,Expires,Pragma,Server,Set-Cookie,Transfer-Encoding,X-Content-Type-Options,X-XSS-Protection,X-Frame-Options,X-Application-Context,X-XSRF-TOKEN",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "3600",
									"name": "Access-Control-Max-Age",
									"description": "Indicates how long the results of a preflight request can be cached in seconds."
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Mar 2018 08:57:30 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "0",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Lemon-Authorization",
									"value": "Bearer eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..67vCQNaR-VM37YEO571uLg.1jXeBb0Ae1eywMSjc9d8IUA4yidb1uK8JMCR1RiA-RoX3oroBULLi77f_dIQfPHpG_wAaT-j4RfUGvNfWlNU2Fq23gYWLMcEMMzHlOwxTu0zsCIrDI389Z5ElggG_Bxefq9HWwIMkoo91H2bImJY-w.8zgr1-WFF2TaIJdmLIaYtQ",
									"name": "Lemon-Authorization",
									"description": "Custom header"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"id\":2,\"username\":\"skpatel20+changedlemon6524790@example.com\",\"roles\":[],\"tag\":{\"name\":\"Edited name\"},\"unverified\":false,\"blocked\":false,\"admin\":false,\"goodUser\":true,\"goodAdmin\":false}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "8b7c6d4c-0dfa-46d2-85d9-9f3c42cd0e0a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e09de7b3-7c39-4d89-b8c0-53e01de78c83",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}